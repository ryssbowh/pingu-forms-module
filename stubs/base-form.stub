<?php
namespace $NAMESPACE$;

use Pingu\Forms\Support\Fields\Submit;
use Pingu\Forms\Support\Form;

class $CLASS$ extends Form
{
	/**
	 * Bring variables in your form through the constructor :
	 */
	public function __construct()
	{
		parent::__construct();
	}

	/**
	 * Fields definitions for this form, classes used here
	 * must extend Pingu\Forms\Support\Field
	 * 
	 * @return array
	 */
	public function fields()
	{
		return [
			'submit' => [
				'field' => Submit::class,
			]
		];
	}

	/**
	 * Method for this form, POST GET DELETE PATCH and PUT are valid
	 * 
	 * @return string
	 */
	public function method()
	{
		return 'POST';
	}

	/**
	 * Url for this form, valid values are
	 * ['url' => '/foo.bar']
	 * ['route' => 'login']
	 * ['action' => 'MyController@action']
	 * 
	 * @return array
	 * @see https://github.com/LaravelCollective/docs/blob/5.6/html.md
	 */
	public function url()
	{
		return ['route' => 'user.login'];
	}

	/**
	 * Name for this form, ideally it would be application unique, 
	 * best to prefix it with the name of the module it's for.
	 * only alphanumeric and hyphens
	 * 
	 * @return string
	 */
	public function name()
	{
		return 'user-details';
	}

	/**
	 * Define fields groups in your form here.
	 * if none are given a default one will be created with all fields in it.
	 * 
	 * @return array
	 */
	public function groups()
    {
        return [
	 		'header' => ['name', 'surname'],
	 		'main' => ['phone', 'address']
	 	];
    }

    /**
     * Various options that you can access in your templates/events
     
     * @return array
     */
    public function options()
    {
        return [];
    }
}